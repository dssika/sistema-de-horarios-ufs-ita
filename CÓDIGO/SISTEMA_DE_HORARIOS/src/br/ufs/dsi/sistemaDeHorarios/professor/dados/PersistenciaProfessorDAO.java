//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project :  SISTEMA DE HORÁRIOS
//  @ File Name : PersistenciaProfessorDAO.java
//  @ Date : 13/05/2011
//  @ Author : @
//
//



package br.ufs.dsi.sistemaDeHorarios.professor.dados;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.mysql.jdbc.PreparedStatement;


import br.ufs.dsi.sistemaDeHorarios.disciplina.entidade.Disciplina;
import br.ufs.dsi.sistemaDeHorarios.horario.entidade.HorariosProfessor;
import br.ufs.dsi.sistemaDeHorarios.professor.entidade.Professor;


public class PersistenciaProfessorDAO implements IPersistenciaProfessor {
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.professor.dados.IPersistenciaProfessor#gravar(br.ufs.dsi.sistemaDeHorarios.professor.entidade.Professor)
	 */
	
	EntityManager manager;

	
	public PersistenciaProfessorDAO(){
		EntityManagerFactory factory = Persistence.createEntityManagerFactory("SISTEMA_DE_HORARIOS");
		manager = factory.createEntityManager();
	}
	
	
	@Override
	public void gravar(Professor professor) {
		manager.getTransaction().begin();
		manager.persist(professor);
		manager.getTransaction().commit();
		manager.close();
	}
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.professor.dados.IPersistenciaProfessor#excluir(br.ufs.dsi.sistemaDeHorarios.professor.entidade.Professor)
	 */
	@Override
	public void excluir(Professor professor) {
		manager.getTransaction().begin();
		Professor professorBusca = buscar(professor.getMatricula());
		manager.remove(professorBusca);
		manager.getTransaction().commit();
	}

	
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.professor.dados.IPersistenciaProfessor#visualizarDados(br.ufs.dsi.sistemaDeHorarios.professor.entidade.Professor)
	 */
	@Override
	public Professor visualizarDados(Professor professor) {
		return professor;
		//Professor professorBusca = buscar(professor.getMatricula());
		//return professorBusca;
	}
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.professor.dados.IPersistenciaProfessor#gravarHorariosPreferenciais(br.ufs.dsi.sistemaDeHorarios.horario.entidade.HorariosProfessor)
	 */
	@Override
	public void gravarHorariosPreferenciais( HorariosProfessor horarios) {
	
	}
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.professor.dados.IPersistenciaProfessor#gravarDisciplinasPreferenciais(br.ufs.dsi.sistemaDeHorarios.disciplina.entidade.Disciplina)
	 */
	@Override
	public void gravarDisciplinasPreferenciais(Disciplina disciplina) {
	
	}
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.professor.dados.IPersistenciaProfessor#gravarValidacao(br.ufs.dsi.sistemaDeHorarios.horario.entidade.HorariosProfessor)
	 */
	@Override
	public void gravarValidacao(HorariosProfessor horario) {
	
	}

	@Override
	public void editar(Professor professor) {
		Professor buscaProfessor = buscar(professor.getMatricula());
        buscaProfessor.setNome(professor.getNome());
		buscaProfessor.setLogin(professor.getLogin());
		buscaProfessor.setSenha(professor.getSenha());
		buscaProfessor.setTelefone(professor.getTelefone());
		buscaProfessor.setArea(professor.getArea());
		buscaProfessor.setCordenador(professor.getCordenador());
		buscaProfessor.setEmail(professor.getEmail());
	}

	@Override
	public Professor buscar(Integer idProfessor) {
		 return manager.find(Professor.class, idProfessor);
	}

	@Override
	public List<Professor> buscarTodos() {
		Query query = manager.createQuery("select * from tb_professor");
        return  query.getResultList();
	}
	
	
	@Override
	public String autenticar(String login, String senha){
		System.out.println("Login: "+login+ " = Senha: "+senha);
		try{
			Query query = manager.createNativeQuery("SELECT cordenador FROM sistema_horarios.tb_professor tp"+
					" WHERE tp.LOGIN = '"+login+"' and tp.senha = '"+senha+"'");
			String resultado = query.getSingleResult().toString();
			System.out.println("Resultado: "+resultado);
			if(resultado.equals("S") || resultado.equals("N"))
				return "sucesso";				
		}catch(Exception e){
			System.out.println(e + " - Não pode encontrar o usuário: '"+login+"'");
		}
		return "falha";
	}
}
