//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project :  SISTEMA DE HORÁRIOS
//  @ File Name : PersistenciaDisciplinaDAO.java
//  @ Date : 13/05/2011
//  @ Author : @
//
//



package br.ufs.dsi.sistemaDeHorarios.disciplina.dados;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;

import br.ufs.dsi.sistemaDeHorarios.arquitetura.dados.Conexao;
import br.ufs.dsi.sistemaDeHorarios.disciplina.entidade.Disciplina;


public class PersistenciaDisciplinaDAO_JDBC implements IPersistenciaDisciplinaJDBC {
	
	Connection conn = null;

	public void abrirConexao() throws SQLException {
		conn = Conexao.getConexao();
	}
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.disciplina.dados.IPersistenciaDisciplina#gravar(br.ufs.dsi.sistemaDeHorarios.disciplina.entidade.Disciplina)
	 */
	@Override
	public void gravar(Disciplina disciplina) {

			try {
				abrirConexao();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		
		String sql = "INSERT INTO tb_disciplina (cod_disciplina, nome,carga_horaria,"
			+ "periodo_disciplina,tipo_disciplina)"
			+ "VALUES (?,?,?,?,?)";

	PreparedStatement ps;

	try {
		ps = conn.prepareStatement(sql);
		ps.setInt(1, disciplina.getCod_disciplina());
		ps.setString(2, disciplina.getNome());
		ps.setInt(3, disciplina.getCarga_horaria());
		ps.setInt(4, disciplina.getPeriodo_disciplina());
		ps.setString(5, String.valueOf(disciplina.getTipo_disciplina()));

		ps.executeUpdate();

		} catch (SQLException ex) {
			ex.printStackTrace();
		} finally {
			try {
				conn.close();
			} catch (SQLException ex) {
				ex.printStackTrace();
			}
		}
		
	}
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.disciplina.dados.IPersistenciaDisciplina#editar(br.ufs.dsi.sistemaDeHorarios.disciplina.entidade.Disciplina)
	 */
	@Override
	public void editar(Disciplina disciplina) {
	
		try {
			abrirConexao();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	
		String sql = "UPDATE tb_disciplina ( nome=?,carga_horaria=?,"
			+ "periodo_disciplina=?,tipo_disciplina=?)"
			+ "where cod_disciplina = ?";

		PreparedStatement ps;
		
		try {
			ps = conn.prepareStatement(sql);
			ps.setString(1, disciplina.getNome());
			ps.setInt(2, disciplina.getCarga_horaria());
			ps.setInt(3, disciplina.getPeriodo_disciplina());
			ps.setString(4, String.valueOf(disciplina.getTipo_disciplina()));
			ps.setInt(5, disciplina.getCod_disciplina());
			
			ps.executeUpdate();

			} catch (SQLException ex) {
				ex.printStackTrace();
			} finally {
				try {
					conn.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			}
		
	}
	
	/* (non-Javadoc)
	 * @see br.ufs.dsi.sistemaDeHorarios.disciplina.dados.IPersistenciaDisciplina#excluir(br.ufs.dsi.sistemaDeHorarios.disciplina.entidade.Disciplina)
	 */
	@Override
	public void excluir(Disciplina disciplina) {
		
		try {
			abrirConexao();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String discip = "DELETE FROM tb_disciplina WHERE matricula = ?";

		PreparedStatement ps;
		try {
			ps = conn.prepareStatement(discip);
			ps.setInt(1, disciplina.getCod_disciplina());
			ps.executeUpdate();

		} catch (SQLException ex) {
			ex.printStackTrace();
		} finally {
			try {
				conn.close();
			} catch (SQLException ex) {
				ex.printStackTrace();
			}
		}
		
	}
	
	@Override
	public List<Disciplina> visualizarDisciplina() {		
		List<Disciplina> listaDisciplina = new ArrayList<Disciplina>();
        
        try {
        	abrirConexao();
            Statement statement = conn.createStatement();
            ResultSet resultset = statement.executeQuery("select * FROM tb_disciplina order by nome");
            
            while (resultset.next()) {
            	Disciplina disciplina = new Disciplina();
            	disciplina.setNome( resultset.getString("nome"));
            	disciplina.setCod_disciplina(resultset.getInt("cod_disciplina"));
            	disciplina.setCarga_horaria(resultset.getInt("carga_horaria"));
            	disciplina.setPeriodo_disciplina(resultset.getInt("periodo_disciplina"));
            	listaDisciplina.add(disciplina);
            }
            conn.close();
            
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } 
        return listaDisciplina;		
	}


	public Disciplina buscar(Disciplina disciplina) {		
		return disciplina;
	}


}
